"0",""
"0","#install.packages(""numDeriv"")"
"0",""
"0","gridxy = as.matrix(expand.grid(x = seq(-5,5,0.1), y = seq(-5,5,0.1)))"
"0","likeval = apply(gridxy,1,H)"
"0","likedf = data.frame(gridxy,likeval)"
"0","colnames(likedf) = c(""mu1"",""mu2"",""H"")"
"0",""
"0","library(numDeriv)"
"0","{#Initial parameters"
"0","    diff = 1"
"0","    iter = 1"
"0","    x = c(0,-2)"
"0","    xgdold = matrix(1,ncol=2,nrow=1000)"
"0","    #Learning rate"
"0","    lr = 0.001"
"0","    "
"0","    #Gradient descent with automatic stopping"
"0","    while (diff>10^-4){"
"0","      xgdold[iter,] = x"
"0","      grad = grad(func=H,x=x)"
"0","      x = x - lr*grad"
"0","      diff = sum(abs(x - xgdold[iter,]))/2"
"0","      iter=iter+1"
"0","    }"
"0","    iter"
"0","    #Collect parameter estimates in data frame"
"0","    optpathgd = data.frame(xgdold[1:(iter-1),])"
"0","    colnames(optpathgd) = c(""mu1est1"",""mu2est1"")"
"0","    "
"0","}"
"0",""
"0",""
"0","library(ggplot2)"
"0","#AGAIN WITH STARTING VALUES (1,1)"
"0","#Initial parameters"
"0","{"
"0","  diff = 1"
"0","  iter = 1"
"0","  x = c(1,1)"
"0","  xgdold = matrix(1,ncol=2,nrow=1000)"
"0","  #Learning rate"
"0","  lr = 0.001"
"0","  "
"0","  #Gradient descent with automatic stopping"
"0","  while (diff>10^-4){"
"0","    xgdold[iter,] = x"
"0","    grad = grad(func=H,x=x)"
"0","    x = x - lr*grad"
"0","    diff = sum(abs(x - xgdold[iter,]))/2"
"0","    iter=iter+1"
"0","  }"
"0","  iter"
"0","  #Collect parameter estimates in data frame"
"0","  optpathgd1 = data.frame(xgdold[1:(iter-1),])"
"0","  colnames(optpathgd1) = c(""mu1est1"",""mu2est1"")"
"0","} "
"0",""
"0","   "
"0","library(ggplot2)"
"0","mixt_pl <- ggplot(likedf)"
"0","mixt_pl +"
"0","    stat_contour(aes(x = mu1, y = mu2,"
"0","    z = H,colour = after_stat(level)),bins=50)+"
"0","    geom_path(data = optpathgd,aes(x = mu1est1,"
"0","    y = mu2est1),colour=""red"")+"
"0","    geom_path(data = optpathgd1,aes(x = mu1est1,"
"0","    y = mu2est1),colour=""blue"")"
