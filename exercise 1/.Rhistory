n <- 10^5
seed <- 1234
Box_muller <- function(n, mu, sigma, seed){
set.seed(seed)
samples <- matrix(ncol = 2, nrow = n)
for (i in c(1:n)){
u1 <- runif(1)
u2 <- runif(1)
R <- sqrt(-2*log(1 - u1))
theta <- 2*pi*u2
X <- R*cos(theta)
Y <- R*sin(theta)
samples[i,1] <- X
samples[i,2] <- Y
}
return(samples)
}
results <- Box_muller(n, mu = 0, sigma = 1, seed)
hist(results)
set.seed(seed)
results_standard <- rnorm(n)
summary(results[,1]) - summary(results_standard)
hist(results[,1])
library(ggplot2)
n <- 10^5
seed <- 1234
Box_muller <- function(n, mu, sigma, seed){
set.seed(seed)
samples <- matrix(ncol = 2, nrow = n)
for (i in c(1:n)){
u1 <- runif(1)
u2 <- runif(1)
R <- sqrt(-2*log(1 - u1))
theta <- 2*pi*u2
X <- R*cos(theta)
Y <- R*sin(theta)
samples[i,1] <- X
samples[i,2] <- Y
}
return(samples)
}
results <- Box_muller(n, mu = 0, sigma = 1, seed)
hist(results)
set.seed(seed)
results_standard <- rnorm(n)
summary(results[,1]) - summary(results_standard)
hist(Y)
h <- function(x){10*exp(-2*abs(x-5))}
x <- seq(0:12)
plot(x, h(x))
plot(x, h(x), type = "b")
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
h <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*h(X) #
hist(Y)
summary(Y)
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) #
hist(Y)
summary(Y)
plot(X, h(x), type = "b")
plot(X, h(X), type = "b")
plot(X, h(X))
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) #
hist(Y)
summary(Y)
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) #
hist(Y)
summary(Y)
n <- 10000
m <- 5000
y <- rnorm(n = m, mean = 5, sd = 1)
set.seed(1234)
n <- 10000
m <- 5000
y <- rnorm(n = m, mean = 5, sd = 1)
w <- y/runif(m, 0,10)
sum(w)
y
w <-  w(y)
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) #
hist(Y)
summary(Y)
w <-  w(y)
w
sum(w)
sum(scale(w))
w <- w/sum(w)
w
sum(w)
x <- sample(y, replace = TRUE, prob = w)
x <- sample(y, replace = TRUE, prob = w, size = n)
hist(x)
w
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234)
n <- 10000
m <- 5000
y <- rnorm(n = m, mean = 5, sd = 1)
w <-  w(y)
w <- w/sum(w)
x <- sample(y, replace = TRUE, prob = w, size = n)
hist(x)
w <- function(x) h(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234)
n <- 10000
m <- 5000
y <- rnorm(n = m, mean = 5, sd = 1)
w <-  w(y)
w <- w/sum(w)
x <- sample(y, replace = TRUE, prob = w, size = n)
hist(x)
w <- function(x) f(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234)
n <- 10000
m <- 5000
y <- rnorm(n = m, mean = 5, sd = 1)
w <-  w(y)
w <- w/sum(w)
x <- sample(y, replace = TRUE, prob = w, size = n)
hist(x)
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature) shouln't this be chanced for clarity?
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) #
hist(Y)
summary(Y)
knitr::opts_chunk$set(echo = TRUE)
plot(X, h(X), type = b)
plot(X, h(X), type = "b")
plot(X, h(X), type = "l")
plot(X, h(X), type = "a")
plot(X, h(X), type = "c")
plot(X, h(X))
summary(x)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
n <- 10^5 # number of observations simulated
seed <- 1234 # seed for reproducability
Box_muller <- function(n, mu, sigma, seed){
set.seed(seed)
samples <- matrix(ncol = 2, nrow = n) # create a matrix where samples will be stored
for (i in c(1:n)){ # for loop 1 -> n
u1 <- runif(1) # sample u1 from uniform
u2 <- runif(1) # sample u2 from uniform
R <- sqrt(-2*log(1 - u1)) # calculate the fist part of the norm equation
theta <- 2*pi*u2 # the second part  as tabulated in table 6.1 in the book
X <- R*cos(theta) # make two variables x and y
Y <- R*sin(theta) # both of wich are normally distributed i.i.d
samples[i,1] <- X # pack both of the variables into the matrix
samples[i,2] <- Y # created earlier.
}
return(samples)  # return samples
}
results <- Box_muller(n, mu = 0, sigma = 1, seed) # call for the functions
hist(results) # lets hist's
set.seed(seed) # lets see wheeather theres diffrerence to the standard rnorm function in R
results_standard <- rnorm(n)
summary(results[,1]) - summary(results_standard)
summary(results[,2]) - summary(results_standard)
library(ggplot2)
n <- 10^5 # number of observations simulated
seed <- 1234 # seed for reproducability
Box_muller <- function(n, mu, sigma, seed){
set.seed(seed)
samples <- matrix(ncol = 2, nrow = n) # create a matrix where samples will be stored
for (i in c(1:n)){ # for loop 1 -> n
u1 <- runif(1) # sample u1 from uniform
u2 <- runif(1) # sample u2 from uniform
R <- sqrt(-2*log(1 - u1)) # calculate the fist part of the norm equation
theta <- 2*pi*u2 # the second part  as tabulated in table 6.1 in the book
X <- R*cos(theta) # make two variables x and y
Y <- R*sin(theta) # both of wich are normally distributed i.i.d
samples[i,1] <- X # pack both of the variables into the matrix
samples[i,2] <- Y # created earlier.
}
return(samples)  # return samples
}
results <- Box_muller(n, mu = 0, sigma = 1, seed) # call for the functions
hist(results{,1}) # lets hist's
library(ggplot2)
n <- 10^5 # number of observations simulated
seed <- 1234 # seed for reproducability
Box_muller <- function(n, mu, sigma, seed){
set.seed(seed)
samples <- matrix(ncol = 2, nrow = n) # create a matrix where samples will be stored
for (i in c(1:n)){ # for loop 1 -> n
u1 <- runif(1) # sample u1 from uniform
u2 <- runif(1) # sample u2 from uniform
R <- sqrt(-2*log(1 - u1)) # calculate the fist part of the norm equation
theta <- 2*pi*u2 # the second part  as tabulated in table 6.1 in the book
X <- R*cos(theta) # make two variables x and y
Y <- R*sin(theta) # both of wich are normally distributed i.i.d
samples[i,1] <- X # pack both of the variables into the matrix
samples[i,2] <- Y # created earlier.
}
return(samples)  # return samples
}
results <- Box_muller(n, mu = 0, sigma = 1, seed) # call for the functions
hist(results[,1]) # lets hist's
hist(results[,2]) # lets hist's
set.seed(seed) # lets see wheeather theres diffrerence to the standard rnorm function in R
results_standard <- rnorm(n)
summary(results[,1]) - summary(results_standard)
summary(results[,2]) - summary(results_standard)
rowMean(results)
rowMeans(results)
summary(rowMeans(results)) - summary(results_standard)
summary(rowMeans(results)) - summary(results_standard)
hist(rowMeans(results))]
hist(rowMeans(results))
summary(rowMeans(results)) - summary(results_standard)
hist(rowMeans(results))
integrate(f, 0, 10)
sum(y)
integrate(f, 0, 10)
hist(Y)
summary(Y)
integrate(f, 0, 10)
summary(Y)
x <- runif(10^4,0,10)
h <- function(x){10*exp(-2*abs(x-5))}
plot(x, h(X))
plot(x, h(x))
x <- runif(10^4,0,10)
h <- function(x){10*exp(-2*abs(x-5))}
plot(x, h(x))
summary(h(x))
set.seed(1234)
x <- runif(10^4,0,10)
h <- function(x){10*exp(-2*abs(x-5))}
plot(x, h(x))
plot(x, h(x))
summary(h(x))
plot(x, h(x))
summary(h(x))
set.seed(1234)
x <- runif(10^4,0,10)
h <- function(x){10*exp(-2*abs(x-5))}
plot(x, h(x))
summary(h(x))
plot(x, h(x))
set.seed(1234)
x <- runif(10^4,0,10)
h <- function(x){10*exp(-2*abs(x-5))}
plot(x, h(x))
summary(h(x))
integrate(x*f(x), 0,10)
integrate(x*h(x), 0,10)
*
x*h(x)
h2 <- function(x){x*h(x)}
integrate(h2, 0,10)
integrate(h2, -inf , inf)
integrate(h2, -Inf , Inf)
summary(h(x))
integrate(h2, -Inf , Inf)
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
plot(x, h(x))
summary(h(x))
integrate(h2, -Inf , Inf)
hist(h(x))
integrate(h2, -Inf , Inf)
hist(h(x))
plot(x, h(x))
summary(h(x))
hist(h(x))
summary(h(x))
sims <- h(x)
Esims <- sims/n
Esims
Esims <- sum(sims)/n
Esims
summary(h(x))
n
Esims <- sum(sims)/10^5
Esims
sims <- h(x)
Esims <- sum(sims)/10^5
Esims
Esims <- sum(sims)/10^4
Esims
summary(h(x))
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
sims <- h(x)
Esims <- sum(sims)/10^4
plot(x, h(x))
hist(h(x))
summary(h(x))
integrate(h2, -Inf , Inf)
sum(sims)/10^4
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
sims <- h(x)
sum(sims)/10^4
plot(x, h(x))
hist(h(x))
summary(h(x))
integrate(h2, -Inf , Inf)
integrate(h2, 0 , 10)
integrate(h2, 0 , 10)
integrate(h2, 0 , 10)
integrate(h2, 0 , 10)
h2 <- function(x){x*10*exp(-2*abs(x-5))}
integrate(h2, 0 , 10)
integrate(h2, 0 , 10)
integrate(h2, 0 , 10)
plot(x, h(x))
hist(h(x))
plot(x, h(x))
sims <- h(x)
sum(sims)/10^4
plot(x, h(x))
plot(x, h(x))
hist(h(x))
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
integrate(h2, 0 , 10)
sims <- h(x)
sum(sims)/10^4
plot(x, h(x))
hist(h(x))
summary(h(x))
sd(sims)
summary(h(x))
sims <- h(x)
sum(sims)/10^4
sd(sims)
summary(h(x))
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
integrate(h2, 0 , 10)
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
summary(h(x))
mu;sd;cv
set.seed(1234)
x <- runif(10^4, 0, 10)
h <- function(x){10*exp(-2*abs(x-5))}
h2 <- function(x){x*h(x)}
integrate(h2, 0 , 10)
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
summary(h(x))
mu;sd;cv
w <- function(x) f(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234) #set seet for reproducabilituy
n <- 10000 # n. of observatiosn
m <- 5000 # n. of samples
y <- rnorm(n = m, mean = 5, sd = 1) # take samples from the envelope
w <-  w(y) # calculate weights
w <- w/sum(w) # norm the weights
x <- sample(y, replace = TRUE, prob = w, size = n) # resample from envelope with the weights as probabilities
hist(x) # let's see what was created
sum(y)
sum(Y)
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature)
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) # weighting in the samples.
hist(Y)
summary(Y)
integrate(f, 0, 10)
set.seed(1234) #set seed for reproducability
x <- runif(10^4, 0, 10) # sample x from ~Unif(0,10)
h <- function(x){10*exp(-2*abs(x-5))} # h pdf function
h2 <- function(x){x*h(x)} # for calculating expected value
integrate(h2, 0 , 10) # expected value turn out to be ~50
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
summary(h(x))
mu;sd;cv
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
summary(h(x))
mu;sd;cv
set.seed(1234) #set seed for reproducability
x <- runif(10^4, 0, 10) # sample x from ~Unif(0,10)
h <- function(x){10*exp(-2*abs(x-5))} # h pdf function
h2 <- function(x){x*h(x)} # for calculating expected value
integrate(h2, 0 , 10) # expected value turn out to be ~50. 10x what it is supposed to be
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
summary(h(x))
mu;sd;cv
x <- runif(10^4, 0, 10) # sample x from ~Unif(0,10)
sims <- h(x) # MC simulations
sims
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
plot(x, h(x))
hist(h(x))
summary(h(x))
hist(h(x))
summary(h(x))
plot(x, h(x))
mean(x)
plot(x, h(x))
hist(h(x))
h(x)
hist(h(x))
integrate(h, 0 , 10) # expected value turn out to be ~50. 10x what it is supposed to be
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature)
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) # weighting in the samples.
hist(Y)
summary(Y)
integrate(f, 0, 10)
set.seed(1234) #set seed for reproducability
h <- function(x){10*exp(-2*abs(x-5))} # h pdf function
h2 <- function(x){x*h(x)} # for calculating expected value
integrate(h, 0 , 10) # expected value turn out to be ~50. 10x what it is supposed to be
x <- runif(10^4, 0, 10) # sample x from ~Unif(0,10)
sims <- h(x) # MC simulations
mu <- sum(sims)/10^4 #calculate the mean
sd <- sd(sims) # sd of simulations
cv <- mu/sd # coefficent of variations
plot(x, h(x))
hist(h(x))
summary(h(x))
mu;sd;cv
sims
w <- function(x) f(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234) #set seet for reproducabilituy
n <- 10000 # n. of observatiosn
m <- 5000 # n. of samples
y <- rnorm(n = m, mean = 5, sd = 1) # take samples from the envelope
w <-  w(y) # calculate weights
w <- w/sum(w) # norm the weights
x <- sample(y, replace = TRUE, prob = w, size = n) # resample from envelope with the weights as probabilities
hist(x) # let's see what was created
w <- function(x) dunif(x, 0, 10)/dnorm(x, mean=5, sd=1) # weights -> f/g
f <- function(x) 10*exp(-2*abs(x-5)) # f() function (h() in literature)
X <- rnorm(10000,mean=5,sd=1) # sampling for X from normal distribution that is: the envelope distr. g()
Y <- w(X)*f(X) # weighting in the samples.
hist(Y)
summary(Y)
summary(x)
w <- function(x) f(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234) #set seet for reproducabilituy
n <- 10000 # n. of observatiosn
m <- 5000 # n. of samples
y <- rnorm(n = m, mean = 5, sd = 1) # take samples from the envelope
w <-  w(y) # calculate weights
w <- w/sum(w) # norm the weights
x <- sample(y, replace = TRUE, prob = w, size = n) # resample from envelope with the weights as probabilities
hist(x) # let's see what was created
x <- rnorm(n, mean = 5, 1)
hist(x)
w <- function(x) f(x)/dnorm(x, mean=5, sd=1) # weights -> f/g
set.seed(1234) #set seet for reproducabilituy
n <- 10000 # n. of observatiosn
m <- 5000 # n. of samples
y <- rnorm(n = m, mean = 5, sd = 1) # take samples from the envelope
w <-  w(y) # calculate weights
w <- w/sum(w) # norm the weights
x <- sample(y, replace = TRUE, prob = w, size = n) # resample from envelope with the weights as probabilities
hist(x) # let's see what was created
x1 <- rnorm(n, mean = 5, 1)
hist(x1)
var(x)
var(x)
var(x1)
var(x)
var(x1)
