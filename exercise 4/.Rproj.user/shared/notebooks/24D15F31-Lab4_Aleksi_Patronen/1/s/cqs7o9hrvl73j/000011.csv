"0","normm<-function (Nsim, a) "
"0","{"
"0","        vec <- vector(""numeric"", Nsim)"
"0","        x <- 0"
"0","        vec[1] <- x"
"0","        N_acc = 0"
"0","        for (i in 2:Nsim) {"
"0","                innov <- runif(1, -a, a)"
"0","                Xstar <- x + innov"
"0","                aprob <- min(1, dnorm(Xstar)/dnorm(x))"
"0","                u <- runif(1)"
"0","                if (u < aprob) {"
"0","                  x <- Xstar"
"0","                  N_acc = N_acc + 1 # it is sufficient that we count the times the proposal is accepted   "
"0","                  }"
"0","                vec[i] <- x"
"0","        }"
"0","        return(list(res = vec, acc = N_acc/Nsim)) #return the vector and the acceptance rate. It is no the number of time the proposal was accepted divided by the proposal numbers that is the same as Nsim."
"0","        "
"0","}"
"0",""
"0","results <- normm(10^3,1)"
"0","results$acc "
"1","[1]"
"1"," 0.812"
"1","
"
"0","results <- normm(10^3,0.1)"
"0","results[2] "
"1","$acc
"
"1","[1]"
"1"," 0.989"
"1","
"
"1","
"
