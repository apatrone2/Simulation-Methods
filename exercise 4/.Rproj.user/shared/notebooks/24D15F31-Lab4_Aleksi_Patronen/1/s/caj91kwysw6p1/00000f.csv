"0","gammh<-function (Nsim, a, b) "
"0","{        mu <- a/b"
"0","        sig <- sqrt(a/(b * b))"
"0","        vec <- vector(""numeric"", Nsim)"
"0","        x <- a/b"
"0","        vec[1] <- x"
"0","        for (i in 2:Nsim) {"
"0","             can <- rnorm(1, mu, sig)"
"0","             aprob <- min(1, (dgamma(can, a, b)/dgamma(x, "
"0","             a, b))/(dnorm(can, mu, sig)/dnorm(x,mu, sig)))"
"0","                u <- runif(1)"
"0","                if (u < aprob) "
"0","                        x <- can"
"0","                vec[i] <- x"
"0","        }"
"0","        vec"
"0","}"
"0",""
